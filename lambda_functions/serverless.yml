service: localbriefing-lambda

provider:
  name: aws
  runtime: python3.9
  region: ap-northeast-2
  timeout: 900  # 15분
  memorySize: 1024
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_NAME: ${env:DB_NAME}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    SEOUL_API_KEY: ${env:SEOUL_API_KEY}
    KAKAO_API_KEY: ${env:KAKAO_API_KEY}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - rds:*
        - cloudwatch:PutMetricData
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

functions:
  # 메인 크롤링 함수
  crawler:
    handler: crawler_handler.lambda_handler
    events:
      # 매일 새벽 4시 (KST) = UTC 19시
      - schedule: cron(0 19 * * ? *)
    layers:
      - ${cf:localbriefing-layers.CrawlerLayerExport}

  # 음식점 데이터 수집 (주 1회)
  restaurant:
    handler: restaurant_handler.lambda_handler
    events:
      # 매주 일요일 새벽 3시
      - schedule: cron(0 18 ? * SUN *)
    layers:
      - ${cf:localbriefing-layers.CrawlerLayerExport}

  # API Gateway 연동 (수동 실행용)
  crawlerApi:
    handler: crawler_handler.lambda_handler
    events:
      - http:
          path: /crawl
          method: post
          cors: true
    layers:
      - ${cf:localbriefing-layers.CrawlerLayerExport}

  restaurantApi:
    handler: restaurant_handler.lambda_handler
    events:
      - http:
          path: /restaurants
          method: post
          cors: true
    layers:
      - ${cf:localbriefing-layers.CrawlerLayerExport}

# Lambda Layer 정의
layers:
  crawlerLayer:
    path: layers/crawler
    name: localbriefing-crawler-layer
    description: "크롤링 공통 라이브러리"
    compatibleRuntimes:
      - python3.9
    retain: false

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true