{
  "/Users/sesil/PycharmProjects/team36-aws-hackathon/lambda_functions/serverless_simple.yml": {
    "versionFramework": "4.18.2",
    "servicePath": "/Users/sesil/PycharmProjects/team36-aws-hackathon/lambda_functions/serverless_simple.yml",
    "serviceConfigFileName": "serverless_simple.yml",
    "service": {
      "service": "localbriefing-simple",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-1",
        "timeout": 300,
        "memorySize": 512,
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "cloudwatch:PutMetricData",
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents"
            ],
            "Resource": "*"
          }
        ]
      },
      "functions": {
        "crawler": {
          "handler": "crawler_handler_simple.lambda_handler",
          "events": [
            {
              "schedule": "cron(0 19 * * ? *)"
            }
          ]
        },
        "crawlerApi": {
          "handler": "crawler_handler_simple.lambda_handler",
          "events": [
            {
              "http": {
                "path": "/crawl",
                "method": "post",
                "cors": true
              }
            }
          ]
        }
      },
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "dockerizePip": false,
          "fileName": "requirements_simple.txt"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "us-east-1",
      "timeout": 300,
      "memorySize": 512,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "cloudwatch:PutMetricData",
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents"
          ],
          "Resource": "*"
        }
      ]
    },
    "error": {
      "message": "You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".",
      "stack": "Error: You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".\n    at Authentication.getAuthenticatedData (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:806:10899)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Authentication.authenticate (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:808:22245)\n    at async TraditionalRunner.resolveVariablesAndAuthenticate (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:812:2379)\n    at async TraditionalRunner.run (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1428:27914)\n    at async route (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1603:2878)\n    at async Object.run (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1604:3661)\n    at async run2 (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1604:4815)"
    },
    "serviceRawFile": "service: localbriefing-simple\n\nprovider:\n  name: aws\n  runtime: python3.9\n  region: us-east-1\n  timeout: 300  # 5분\n  memorySize: 512\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - cloudwatch:PutMetricData\n        - logs:CreateLogGroup\n        - logs:CreateLogStream\n        - logs:PutLogEvents\n      Resource: \"*\"\n\nfunctions:\n  # 간단한 크롤링 함수\n  crawler:\n    handler: crawler_handler_simple.lambda_handler\n    events:\n      # 매일 새벽 4시 (KST) = UTC 19시\n      - schedule: cron(0 19 * * ? *)\n    \n  # API Gateway 연동 (수동 실행용)\n  crawlerApi:\n    handler: crawler_handler_simple.lambda_handler\n    events:\n      - http:\n          path: /crawl\n          method: post\n          cors: true\n\nplugins:\n  - serverless-python-requirements\n\ncustom:\n  pythonRequirements:\n    dockerizePip: false\n    fileName: requirements_simple.txt",
    "command": [
      "deploy"
    ],
    "options": {
      "config": "serverless_simple.yml",
      "verbose": true
    },
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  },
  "/Users/sesil/PycharmProjects/team36-aws-hackathon/lambda_functions/serverless_fixed.yml": {
    "versionFramework": "4.18.2",
    "servicePath": "/Users/sesil/PycharmProjects/team36-aws-hackathon/lambda_functions/serverless_fixed.yml",
    "serviceConfigFileName": "serverless_fixed.yml",
    "service": {
      "service": "localbriefing-lambda",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-1",
        "timeout": 900,
        "memorySize": 1024,
        "environment": {
          "DB_HOST": "${env:DB_HOST}",
          "DB_NAME": "${env:DB_NAME}",
          "DB_USER": "${env:DB_USER}",
          "DB_PASSWORD": "<REDACTED>",
          "SEOUL_API_KEY": "<REDACTED>",
          "KAKAO_API_KEY": "<REDACTED>"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "rds:*",
              "cloudwatch:PutMetricData",
              "logs:*"
            ],
            "Resource": "*"
          }
        ]
      },
      "functions": {
        "crawler": {
          "handler": "crawler_handler.lambda_handler",
          "events": [
            {
              "schedule": "cron(0 19 * * ? *)"
            }
          ],
          "layers": [
            {
              "Ref": "CrawlerLambdaLayer"
            }
          ]
        },
        "restaurant": {
          "handler": "restaurant_handler.lambda_handler",
          "events": [
            {
              "schedule": "cron(0 18 ? * SUN *)"
            }
          ],
          "layers": [
            {
              "Ref": "CrawlerLambdaLayer"
            }
          ]
        },
        "crawlerApi": {
          "handler": "crawler_handler.lambda_handler",
          "events": [
            {
              "http": {
                "path": "/crawl",
                "method": "post",
                "cors": true
              }
            }
          ],
          "layers": [
            {
              "Ref": "CrawlerLambdaLayer"
            }
          ]
        }
      },
      "layers": {
        "crawler": {
          "path": "layers/crawler",
          "name": "localbriefing-crawler-layer",
          "compatibleRuntimes": [
            "python3.9"
          ]
        }
      },
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "dockerizePip": false,
          "fileName": "requirements_fixed.txt"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "us-east-1",
      "timeout": 900,
      "memorySize": 1024,
      "environment": {
        "DB_HOST": "${env:DB_HOST}",
        "DB_NAME": "${env:DB_NAME}",
        "DB_USER": "${env:DB_USER}",
        "DB_PASSWORD": "<REDACTED>",
        "SEOUL_API_KEY": "<REDACTED>",
        "KAKAO_API_KEY": "<REDACTED>"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "rds:*",
            "cloudwatch:PutMetricData",
            "logs:*"
          ],
          "Resource": "*"
        }
      ]
    },
    "error": {
      "message": "You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".",
      "stack": "Error: You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".\n    at Authentication.getAuthenticatedData (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:806:10899)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Authentication.authenticate (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:808:22245)\n    at async TraditionalRunner.resolveVariablesAndAuthenticate (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:812:2379)\n    at async TraditionalRunner.run (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1428:27914)\n    at async route (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1603:2878)\n    at async Object.run (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1604:3661)\n    at async run2 (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1604:4815)"
    },
    "serviceRawFile": "service: localbriefing-lambda\n\nprovider:\n  name: aws\n  runtime: python3.9\n  region: us-east-1\n  timeout: 900\n  memorySize: 1024\n  environment:\n    DB_HOST: ${env:DB_HOST}\n    DB_NAME: ${env:DB_NAME}\n    DB_USER: ${env:DB_USER}\n    DB_PASSWORD: ${env:DB_PASSWORD}\n    SEOUL_API_KEY: ${env:SEOUL_API_KEY}\n    KAKAO_API_KEY: ${env:KAKAO_API_KEY}\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - rds:*\n        - cloudwatch:PutMetricData\n        - logs:*\n      Resource: \"*\"\n\nfunctions:\n  crawler:\n    handler: crawler_handler.lambda_handler\n    events:\n      - schedule: cron(0 19 * * ? *)\n    layers:\n      - {Ref: CrawlerLambdaLayer}\n\n  restaurant:\n    handler: restaurant_handler.lambda_handler\n    events:\n      - schedule: cron(0 18 ? * SUN *)\n    layers:\n      - {Ref: CrawlerLambdaLayer}\n\n  crawlerApi:\n    handler: crawler_handler.lambda_handler\n    events:\n      - http:\n          path: /crawl\n          method: post\n          cors: true\n    layers:\n      - {Ref: CrawlerLambdaLayer}\n\nlayers:\n  crawler:\n    path: layers/crawler\n    name: localbriefing-crawler-layer\n    compatibleRuntimes:\n      - python3.9\n\nplugins:\n  - serverless-python-requirements\n\ncustom:\n  pythonRequirements:\n    dockerizePip: false\n    fileName: requirements_fixed.txt",
    "command": [
      "deploy"
    ],
    "options": {
      "config": "serverless_fixed.yml"
    },
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  },
  "/Users/sesil/PycharmProjects/team36-aws-hackathon/lambda_functions/serverless.yml": {
    "versionFramework": "4.18.2",
    "servicePath": "/Users/sesil/PycharmProjects/team36-aws-hackathon/lambda_functions/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "localbriefing-lambda",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "ap-northeast-2",
        "timeout": 900,
        "memorySize": 1024,
        "environment": {
          "DB_HOST": "${env:DB_HOST}",
          "DB_NAME": "${env:DB_NAME}",
          "DB_USER": "${env:DB_USER}",
          "DB_PASSWORD": "<REDACTED>",
          "SEOUL_API_KEY": "<REDACTED>",
          "KAKAO_API_KEY": "<REDACTED>"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "rds:*",
              "cloudwatch:PutMetricData",
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents"
            ],
            "Resource": "*"
          }
        ]
      },
      "functions": {
        "crawler": {
          "handler": "crawler_handler.lambda_handler",
          "events": [
            {
              "schedule": "cron(0 19 * * ? *)"
            }
          ],
          "layers": [
            "${cf:localbriefing-layers.CrawlerLayerExport}"
          ]
        },
        "restaurant": {
          "handler": "restaurant_handler.lambda_handler",
          "events": [
            {
              "schedule": "cron(0 18 ? * SUN *)"
            }
          ],
          "layers": [
            "${cf:localbriefing-layers.CrawlerLayerExport}"
          ]
        },
        "crawlerApi": {
          "handler": "crawler_handler.lambda_handler",
          "events": [
            {
              "http": {
                "path": "/crawl",
                "method": "post",
                "cors": true
              }
            }
          ],
          "layers": [
            "${cf:localbriefing-layers.CrawlerLayerExport}"
          ]
        },
        "restaurantApi": {
          "handler": "restaurant_handler.lambda_handler",
          "events": [
            {
              "http": {
                "path": "/restaurants",
                "method": "post",
                "cors": true
              }
            }
          ],
          "layers": [
            "${cf:localbriefing-layers.CrawlerLayerExport}"
          ]
        }
      },
      "layers": {
        "crawlerLayer": {
          "path": "layers/crawler",
          "name": "localbriefing-crawler-layer",
          "description": "크롤링 공통 라이브러리",
          "compatibleRuntimes": [
            "python3.9"
          ],
          "retain": false
        }
      },
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "dockerizePip": true,
          "layer": true
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "ap-northeast-2",
      "timeout": 900,
      "memorySize": 1024,
      "environment": {
        "DB_HOST": "${env:DB_HOST}",
        "DB_NAME": "${env:DB_NAME}",
        "DB_USER": "${env:DB_USER}",
        "DB_PASSWORD": "<REDACTED>",
        "SEOUL_API_KEY": "<REDACTED>",
        "KAKAO_API_KEY": "<REDACTED>"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "rds:*",
            "cloudwatch:PutMetricData",
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents"
          ],
          "Resource": "*"
        }
      ]
    },
    "error": {
      "message": "You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".",
      "stack": "Error: You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".\n    at Authentication.getAuthenticatedData (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:806:10899)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Authentication.authenticate (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:808:22245)\n    at async TraditionalRunner.resolveVariablesAndAuthenticate (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:812:2379)\n    at async TraditionalRunner.run (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1428:27914)\n    at async route (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1603:2878)\n    at async Object.run (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1604:3661)\n    at async run2 (file:///Users/sesil/.serverless/releases/4.18.2/package/dist/sf-core.js:1604:4815)"
    },
    "serviceRawFile": "service: localbriefing-lambda\n\nprovider:\n  name: aws\n  runtime: python3.9\n  region: ap-northeast-2\n  timeout: 900  # 15분\n  memorySize: 1024\n  environment:\n    DB_HOST: ${env:DB_HOST}\n    DB_NAME: ${env:DB_NAME}\n    DB_USER: ${env:DB_USER}\n    DB_PASSWORD: ${env:DB_PASSWORD}\n    SEOUL_API_KEY: ${env:SEOUL_API_KEY}\n    KAKAO_API_KEY: ${env:KAKAO_API_KEY}\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - rds:*\n        - cloudwatch:PutMetricData\n        - logs:CreateLogGroup\n        - logs:CreateLogStream\n        - logs:PutLogEvents\n      Resource: \"*\"\n\nfunctions:\n  # 메인 크롤링 함수\n  crawler:\n    handler: crawler_handler.lambda_handler\n    events:\n      # 매일 새벽 4시 (KST) = UTC 19시\n      - schedule: cron(0 19 * * ? *)\n    layers:\n      - ${cf:localbriefing-layers.CrawlerLayerExport}\n\n  # 음식점 데이터 수집 (주 1회)\n  restaurant:\n    handler: restaurant_handler.lambda_handler\n    events:\n      # 매주 일요일 새벽 3시\n      - schedule: cron(0 18 ? * SUN *)\n    layers:\n      - ${cf:localbriefing-layers.CrawlerLayerExport}\n\n  # API Gateway 연동 (수동 실행용)\n  crawlerApi:\n    handler: crawler_handler.lambda_handler\n    events:\n      - http:\n          path: /crawl\n          method: post\n          cors: true\n    layers:\n      - ${cf:localbriefing-layers.CrawlerLayerExport}\n\n  restaurantApi:\n    handler: restaurant_handler.lambda_handler\n    events:\n      - http:\n          path: /restaurants\n          method: post\n          cors: true\n    layers:\n      - ${cf:localbriefing-layers.CrawlerLayerExport}\n\n# Lambda Layer 정의\nlayers:\n  crawlerLayer:\n    path: layers/crawler\n    name: localbriefing-crawler-layer\n    description: \"크롤링 공통 라이브러리\"\n    compatibleRuntimes:\n      - python3.9\n    retain: false\n\nplugins:\n  - serverless-python-requirements\n\ncustom:\n  pythonRequirements:\n    dockerizePip: true\n    layer: true",
    "command": [
      "deploy"
    ],
    "options": {},
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}